@charset "UTF-8";
@import url("https://fonts.googleapis.com/css2?family=Cedarville+Cursive&display=swap");
html {
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

:root {
  --space: 2px;
  --padding: calc( var(--space) * 2);
  --margin: calc(var(--space) * 2);
  --background-color: 0xffffff;
  --foreground-color: 0x000000;
}

:root {
  --background-color: hsl(220, 50%, 98%);
  --foreground-color: hsl(0 100% 100%);
  --border-color: hsl(0 0% 50%);
  --component-background-color: hsl(216, 45%, 98%);
  --component-foreground-color: hsl(180, 1%, 43%);
  --edge-color: hsl(0, 0%, 88%);
  --highlight-background-color: hsl(204, 100%, 88%);
  --highlight-foreground-color: hsl(44, 1%, 53%);
  --control-background-color: hsl(204, 88%, 53%);
  --control-foreground-color: hsl(0, 100%, 100%);
  --color-debug-on: hsl(0,100%,50%);
  --color-debug: var(--color-debug,transparent);
  --accent-color-foreground: hsl(45, 97%, 50%);
  --accent-foreground-color: hsl(45, 97%, 50%);
  --tree-control-color: var(--border-color);
}

body {
  background-color: var(--background-color);
  color: var(--foreground-color);
}

.component {
  background-color: var(--component-background-color);
  color: var(--component-foreground-color);
  border: var(--border-size) solid var(--edge-color);
}

:root {
  --space: 2px;
  --small-gap: 2px;
  --line-height: 1.5em;
  --border-size: 1px;
}

#main-content {
  --padding: calc(var(--space) * 2);
  --margin: calc(var(--space) * 2);
  line-height: var(--line-height);
  font-size: var(--font-size);
}

.panel {
  margin: 0;
  padding: 0;
}

:root {
  --z-index-bottom: 0;
  --z-index-medium: 100;
  --z-index-high: 1000;
  --z-index-splitter: 2000;
  --z-index-popup: 3000;
  --z-index-top: 5000;
}

#main-content {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  height: 100%;
  height: 100vh;
  height: 100dvh;
  overflow: hidden;
  display: grid;
  grid-template-areas: "view-options" "content" "status";
  grid-template-rows: max-content 1fr max-content;
}

:root {
  --font-size-small: 0.75em;
  --font-size-normal: 1.25em;
  --font-size-large: 1.75em;
}

body {
  font-family: sans-serif;
}

.font-monospace {
  font-family: "Courier New";
  --font-family: "Courier New";
}

.font-serif {
  font-family: "Georgia";
  --font-family: "Georgia";
}

.font-sans-serif {
  font-family: "Ariel";
  --font-family: "Ariel";
}

.font-cursive {
  font-family: "Cedarville Cursive", cursive;
  --font-family: "Cedarville Cursive", cursive;
}

#main-content {
  font-family: var(--font-family);
}

body.theme-light {
  --background-color: hsl(220, 50%, 98%);
  --foreground-color: hsl(0, 0%, 28%);
}

body.theme-dark {
  --foreground-color: hsl(220, 50%, 98%);
  --background-color: hsl(0, 0%, 28%);
  --component-foreground-color: hsl(216, 45%, 98%);
  --component-background-color: hsl(180, 1%, 43%);
}

.font-monospace {
  font-family: "Courier New";
}

.font-sans-serif {
  font-family: "Ariel";
}

.font-sans-serif {
  font-family: "Lucida Handritting";
}

.font-cursive {
  --font-family: "Cedarville Cursive", cursive;
}

.layout-compact {
  --space: 0px;
  --font-size: 0.75em;
  --line-height: 1em;
}

.layout-normal {
  --space: 6px;
  --font-size: 1.5em;
  --line-height: 1.5em;
}

.layout-small {
  --space: 4px;
  --font-size: 1em;
  --line-height: 1em;
}

.layout-large {
  --space: 8px;
  --font-size: 1.75em;
  --line-height: 1.75em;
}

body.theme-happy {
  --Brand: #AE1365;
  --Darkest: #2E2E2E;
  --Dark: #4C4646;
  --Mid: #9ED4F8;
  --Light: #D3EEF9;
  --Lightest: #F0F9FF;
  --foreground-color: var(--Dark);
  --background-color: var(--Light);
  --component-foreground-color: var(--Mid);
  --component-background-color: var(--Darkest);
  --border-color: var(--Mid);
  --edge-color: var(--Mid);
  --highlight-background-color: var(--Lightest);
  --highlight-foreground-color: var(--Darkest);
  --control-background-color: var(--Mid);
  --control-foreground-color: var(--Dark);
  --accent-color-foreground: var(--Brand);
  --tree-control-color: var(--Brand);
}

body.theme-dolphin {
  --brand-color: #25afd2;
  --darkest-color: #1c0d29;
  --dark-color: #4b216e;
  --mid-color: #f1b24a;
  --light-color: #cde6ec;
  --lightest-color: #FFFFFF;
  --foreground-color: var(--darkest-color);
  --background-color: var(--lightest-color);
  --component-foreground-color: var(--dark-color);
  --component-background-color: var(--light-color);
  --border-color: var(--mid-color);
  --edge-color: var(--mid-color);
  --highlight-background-color: var(--lightest-color);
  --highlight-foreground-color: var(--darkest-color);
  --control-background-color: var(--brand-color);
  --control-foreground-color: var(--lightest-color);
  --accent-color-foreground: var(--brand-color);
  --tree-control-color: var(--brand-color);
}

.media-items {
  height: 100%;
  width: 100%;
  grid-area: media-items;
  background-color: var(--background-color);
  color: var(--foreground-color);
  overflow: hidden;
  position: relative;
}
.media-items .layout {
  height: 100%;
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  overflow-y: auto;
}
.media-items .layout .media-item.unloaded {
  background-image: url("../image/loading.gif");
}
.media-items .layout .media-item {
  left: 0;
  top: 0;
  overflow: hidden;
  border: 2px solid transparent;
  background-color: rgba(255, 255, 255, 0.8);
  display: block;
  position: absolute;
  aspect-ratio: 1/1;
  background-size: 32px;
  background-repeat: no-repeat;
  background-position: center;
}
.media-items .layout .media-item img {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  aspect-ratio: auto;
  max-width: 100%;
  max-height: 100%;
  z-index: 1;
  -o-object-fit: contain;
  object-fit: contain;
}
.media-items .layout .media-item.group.primary::after {
  content: "";
  position: absolute;
  display: block;
  right: 0;
  bottom: 0;
  width: 32px;
  height: 32px;
  background-image: url(../image/group-primary.png?v=1);
  z-index: 100;
  background-size: cover;
}
.media-items .layout .media-item.selected {
  outline: 6px solid var(--accent-color-foreground);
}
.media-items .layout .media-item.focus {
  background-color: var(--focus-background-color);
}
.media-items .layout .media-item.focus::after {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  border: 2px solid var(--focus-background-color);
  z-index: 999;
}
.media-items .layout .media-item.loaded {
  background-image: unset;
}

.filter-sizer {
  grid-area: grid-sizer-filter;
}

.details-sizer {
  grid-area: grid-sizer-details;
}

.grid-sizer {
  z-index: var(--z-index-splitter);
  position: relative;
  margin: 0;
  padding: 2px;
  background-color: transparent;
}

.grid-sizer.left {
  border-left: 1px solid var(--border-color);
  border-right: 1px solid var(--border-color);
  width: 4px;
  cursor: col-resize;
}

.grid-sizer.right {
  border-left: 1px solid #777;
  border-right: 1px solid #777;
  width: 4px;
  cursor: col-resize;
}

.grid-sizer.bottom {
  border-top: 1px solid #777;
  border-bottom: 1px solid #777;
  height: 4px;
  cursor: row-resize;
}

.grid-sizer.dragging {
  opacity: 0;
}

.media-details {
  grid-area: media-details;
  background-color: transparent;
}
.media-details .component {
  background-color: transparent;
  display: grid;
  grid-template-areas: "tag-album" "sizer" "properties";
  grid-template-rows: auto auto 1fr;
  height: 100%;
}
.media-details #tag-album-details {
  background-color: var(--background-color);
  color: var(--foreground-color);
  overflow-y: auto;
  overflow-x: hidden;
  grid-area: tag-album;
}
.media-details .panel.property.details {
  grid-area: properties;
}
.media-details .grid-sizer {
  grid-area: sizer;
}

.media-filter {
  grid-area: media-filter;
  background-color: var(--background-color);
  overflow-y: auto;
  overflow-x: hidden;
}

.album-filter h1 button {
  border-radius: var(--space);
  background-color: var(--accent-color-foreground);
  color: var(--control-foreground-color);
}

input, select, text-area, button {
  font-family: var(--font);
  padding: var(--padding);
  margin: var(--space) var(--space);
  border-radius: 9999px;
  background-color: var(--control-background-color);
  color: var(--control-foreground-color);
  border-color: var(--border-color);
  border: 0px;
  vertical-align: middle;
}

input:focus,
select:focus,
text-area:focus,
button:focus {
  outline: 1px solid var(--highlight-foreground-color);
}

input:hover,
select:hover,
text-area:hover,
button:hover {
  background-color: var(--highlight-background-color);
  color: var(--highlight-foreground-color);
}

input[type=text] {
  background-color: var(--background-color);
}

.component h1,
.component h2 {
  border: 0;
  border-top: 1px solid var(--highlight-background-color);
  padding: var(--padding);
  color: var(--highlight-background-color);
  background-color: var(--highlight-foreground-color);
  position: relative;
  cursor: pointer;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}
.component h1 > *,
.component h2 > * {
  display: inline-block;
}
.component h1 .on-hover,
.component h2 .on-hover {
  visibility: hidden;
  position: absolute;
  right: var(--margin);
}
.component h1 .on-hover button,
.component h2 .on-hover button {
  width: 32px;
  height: 32px;
  padding: 0;
  margin: 0;
  border-radius: var(--space);
}
.component h1 button,
.component h2 button {
  border-radius: var(--space);
  width: unset;
  height: unset;
  color: var(--control-foreground-color);
  background-color: var(--control-background-color);
}
.component h1 button:hover,
.component h2 button:hover {
  background-color: var(--control-foreground-color);
  color: var(--control-background-color);
}
.component h1 .filter-op,
.component h2 .filter-op {
  position: relative;
  vertical-align: middle;
  height: 24px;
  width: 40px;
  border-radius: var(--margin);
  border: 0;
}
.component h1 .filter-op button,
.component h2 .filter-op button {
  display: block;
  width: 100%;
  position: absolute;
  left: 0;
  top: 0;
  padding: var(--space);
  margin: 0;
  padding: 0;
  background-size: 80%;
  background-position: center;
  background-repeat: no-repeat;
}
.component h1 .filter-op button.any,
.component h2 .filter-op button.any {
  background-image: url(../image/any.png);
}
.component h1 .filter-op button.all,
.component h2 .filter-op button.all {
  background-image: url(../image/all.png);
}
.component h1:hover .on-hover {
  visibility: visible;
}
.component h2 {
  padding-left: calc(var(--padding) * 2);
  background-color: var(--highlight-background-color);
  color: var(--highlight-foreground-color);
  border-top: 1px solid var(--highlight-foreground-color);
  font-size: 0.75rem;
}

.toggle-next-sibling,
h1.toggle-next-sibling,
h2.toggle-next-sibling {
  position: relative;
  padding-left: 2em;
}

.toggle-next-sibling + * {
  transform: scaleY(1);
  margin-left: var(--margin);
  transform-origin: top;
  height: auto;
  max-height: 999999px;
  transition: transform 500ms, max-height 50ms;
}

.toggle-next-sibling.hide-next-sibling + * {
  transform: scaleY(0);
  max-height: 0;
  overflow: hidden;
  transform-origin: top;
  transition: transform 500ms, max-height 500ms;
}

.toggle-next-sibling::after {
  content: "▼";
  position: absolute;
  left: var(--padding);
  width: var(--padding);
  height: var(--padding);
  top: calc(var(--padding));
}

.toggle-next-sibling.hide-next-sibling::after {
  content: "▶";
  position: absolute;
  left: var(--padding);
  width: var(--padding);
  height: var(--padding);
  top: calc(var(--padding));
}

li {
  overflow: hidden;
}

a, a:visited {
  color: var(--accent-color-foreground);
  background-color: var(--component-background-color);
  text-decoration: none;
  margin-right: var(--space);
  padding: var(--space);
}

a:hover {
  border-radius: var(--space);
  background-color: var(--accent-color-foreground);
  color: var(--component-background-color);
}

.tag-tree {
  background-color: transparent;
  margin-bottom: 1em;
}
.tag-tree .tag {
  position: relative;
  display: grid;
  grid-template-areas: "toggle checkname" ". children";
  grid-template-columns: auto 1fr;
  grid-template-rows: auto auto;
}
.tag-tree .tag .toggle {
  grid-area: toggle;
  height: 100%;
  width: 1em;
  display: inline-block;
  background-color: transparent;
  z-index: 10;
  cursor: pointer;
}
.tag-tree .tag .toggle + label {
  margin-left: var(--small-gap);
  white-space: nowrap;
  text-overflow: ellipsis;
}
.tag-tree .tag .toggle + label input {
  margin: 0;
}
.tag-tree .tag .toggle:hover {
  outline: var(--color-debug) 1px solid;
}
.tag-tree .tag .name {
  margin-left: 0;
  white-space: nowrap;
  text-overflow: ellipsis;
}
.tag-tree .tag .add-child {
  display: none;
  position: absolute;
  right: 4px;
  background-color: var(--control-background-color);
  color: var(--tree-control-color);
}
.tag-tree .tag:not(.untagged) > label:hover > .add-child,
.tag-tree .tag .add-child:hover {
  display: inline-block;
}
.tag-tree .tag .children {
  border-left: 1px solid var(--tree-control-color);
  grid-area: children;
  margin-left: var(--space);
  max-height: 2000px;
  overflow: hidden;
  transition: transform 400ms, max-height 400ms;
  transform-origin: top;
  transform: scaleY(1);
}
.tag-tree .tag.has-children::after {
  content: "▼";
  position: absolute;
  top: 0;
  left: 0;
  width: 1em;
  height: 1.5em;
  line-height: 1.5em;
  vertical-align: center;
  z-index: var(--z-index-top);
  pointer-events: none;
  transform: rotate(0deg);
  transition: transform 200ms;
  outline: 1px dotted var(--color-debug);
  transform-origin: center center;
}
.tag-tree .tag.has-children.closed .children {
  max-height: 0px;
  overflow: hidden;
  transition: transform 400ms, max-height 400ms;
  transform: scaleY(0);
}
.tag-tree .tag.has-children.closed::after {
  transform: rotate(-90deg);
  transition: transform 200ms;
}

label.check-state {
  position: relative;
  width: 1em;
  height: 100%;
  display: inline-block;
  line-height: 16px;
  vertical-align: middle;
}
label.check-state input[type=checkbox] {
  opacity: 0;
}
label.check-state::after {
  content: "";
  background-color: #777;
  border: 1px solid #444;
  z-index: 10;
  display: inline-block;
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  width: 1em;
  height: 1em;
  background-size: cover;
  border-radius: 4px;
}

label.check-state[data-state=checked]::after {
  background-color: var(--tree-control-color);
  background-image: url(../image/check.png);
}

label.check-state[data-state=checked-and-children]::after {
  background-color: var(--tree-control-color);
  background-image: url(../image/child-check.png);
}

label.check-state[data-state=checked-no-children]::after {
  background-color: var(--tree-control-color);
  background-image: url(../image/child-uncheck.png);
}

label.check-state[data-state=child-only-check]::after {
  background-color: var(--tree-control-color);
  background-image: url(../image/child-only-check.png);
}

label.check-state[data-state=unchecked]::after {
  background-color: #eee;
  background-image: url(../image/nocheck.png);
}

#content-view {
  grid-area: content;
  overflow: hidden;
}

#media-view {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  height: 100%;
  width: 100%;
  background: linear-gradient(142deg, var(--background-color), var(--foreground-color)), linear-gradient(0deg, var(--background-color), var(--foreground-color));
  background-size: 3px 3px;
  grid-template-areas: "date-filter date-filter date-filter date-filter date-filter" "media-filter grid-sizer-filter   media-items grid-sizer-details  media-details";
  grid-template-columns: auto auto 1fr auto auto;
  grid-template-rows: auto 1fr;
  display: grid;
}

#view-options {
  grid-area: view-options;
}
#view-options .component {
  padding: var(--padding);
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
}
#view-options .component > div {
  white-space: nowrap;
  margin-right: calc(var(--margin) * 4);
}
#view-options .component div.right {
  flex: 1 0 auto;
  text-align: right;
}

#status-bar {
  grid-area: status;
  padding: var(--padding);
}

#date-filter {
  display: block;
  grid-area: date-filter;
}
#date-filter .date-select {
  position: relative;
  display: grid;
  grid-template-areas: "start media end";
  grid-template-columns: 10em 1fr 10em;
  grid-template-rows: var(--line-height);
}
#date-filter .date-select .start,
#date-filter .date-select .end {
  display: block;
  text-align: center;
  line-height: var(--line-height);
  background-color: var(--highlight-background-color);
  color: var(--highlight-foreground-color);
}
#date-filter .date-select .start {
  grid-area: start;
}
#date-filter .date-select .end {
  grid-area: end;
}
#date-filter .date-select .svg-container {
  grid-area: media;
  background-color: var(--foreground-color);
  padding: 2px;
  height: var(--line-height);
}
#date-filter .date-select .svg-container svg {
  width: 100%;
  height: 100%;
}
#date-filter .date-select .svg-container svg rect {
  fill: hsl(230deg, 100%, 50%);
  height: 100%;
  width: 20px;
  top: 0;
}
#date-filter .popup-details {
  position: absolute;
  left: 50px;
  top: 200px;
  height: auto;
  border: var(--border-size) solid var(--border-color);
  padding: var(--margin);
  z-index: 100;
  background-color: #ffffff;
  min-width: 300px;
  z-index: var(--z-index-popup);
  display: none;
  background-color: var(--highlight-background-color);
}
#date-filter .popup-details .content {
  display: grid;
  gap: var(--margin);
  grid-template-areas: "left date date right" "first first last last";
  transform: scaleY(0);
  transition: transform 200ms;
}
#date-filter .popup-details .content .date {
  grid-area: date;
}
#date-filter .popup-details .content img {
  display: block;
  margin: auto auto;
}
#date-filter .popup-details .content .first {
  grid-area: first;
}
#date-filter .popup-details .content .last {
  grid-area: last;
}
#date-filter .popup-details .content .left {
  grid-area: left;
}
#date-filter .popup-details .content .right {
  grid-area: right;
  text-align: right;
}
#date-filter .popup-details .content .date, #date-filter .popup-details .content .left, #date-filter .popup-details .content .right {
  line-height: var(--line-height);
  text-align: center;
  padding-top: var(--margin);
}
#date-filter .popup-details.show {
  display: block;
}
#date-filter .popup-details.show .content {
  transform: scaleY(1);
  transition: transform 200ms;
}

.panel.property.details {
  background-color: var(--component-background-color);
  color: var(--component-foreground-color);
  width: 100%;
  overflow: hidden;
}
.panel.property.details .properties {
  display: none;
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
}
.panel.property.details .properties h1 span {
  text-overflow: ellipsis;
  overflow: hidden;
  display: block;
}
.panel.property.details .properties .props {
  display: flex;
  flex-wrap: wrap;
  font-size: var(--font-size-small);
}
.panel.property.details .properties .props span {
  display: block;
  white-space: nowrap;
  margin-right: var(--margin);
}
.panel.property.details .properties .preview {
  flex: 1;
}
.panel.property.details .properties .preview .center {
  height: 100%;
  position: relative;
  left: 50%;
  transform: translate(-50%);
}
.panel.property.details .properties .preview .center img {
  position: relative;
  max-width: 100%;
}
.panel.property.details .properties.selected {
  display: flex;
}

#media-file-editor-container {
  position: absolute;
  border: 1px solid var(--border-color);
  background-color: var(--background-color);
  color: var(--foreground-color);
  padding: var(--container-padding);
  z-index: var(--z-index-popup);
}

#media-file-editor-container button.ungroup {
  display: none;
}

#media-file-editor-container button.group {
  display: none;
}

#media-file-editor-container.grouped button.ungroup {
  display: inline-block;
}

#media-file-editor .selections {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  gap: var(--gap-size);
}

#media-file-editor .selections > div {
  flex: 1 0 auto;
  min-width: 200px;
  max-width: 700px;
  background-color: var(--light-background-color);
}

#media-file-editor .selections > div h1 {
  padding: 2px;
  background-color: var(--heading-background-color);
}

#media-file-editor .match {
  font-weight: bold;
  text-decoration: underline;
}

#media-file-editor label.highlight {
  outline: 1px dashed #aaa;
  display: block;
}

#media-file-editor .key {
  width: 20px;
  display: inline-block;
  text-align: center;
}

#media-file-editor .key-modifier {
  font-size: 10px;
}

#quick-tags {
  --border-color: #000;
  --padding: 8px;
  height: 100%;
  background: linear-gradient(142deg, var(--background-color), var(--foreground-color)), linear-gradient(0deg, var(--background-color), var(--foreground-color));
  background-size: 3px 3px;
  color: var(--component-foreground-color);
  display: grid;
  grid-template-areas: "media sizer select tree";
  grid-template-columns: 25% auto 1fr 2fr;
  position: relative;
}
#quick-tags .quick-tags-sizer {
  grid-area: sizer;
}
#quick-tags .media,
#quick-tags .quick-select,
#quick-tags .quick-tag-tree {
  padding: 2px;
  border-right: 1px solid var(--border-color);
  height: 100%;
  overflow: auto;
}
#quick-tags .media {
  grid-area: media;
  background-color: var(--component-background-color);
}
#quick-tags .quick-select {
  grid-area: select;
  background-color: var(--component-background-color);
  min-width: 200px;
  padding: var(--padding);
}
#quick-tags .quick-select .hotkey {
  min-height: 50%;
  border-bottom: 1px solid #444;
}
#quick-tags .quick-select .hotkey,
#quick-tags .quick-select .recent-tags {
  margin-bottom: 4px;
  padding-bottom: 4px;
}
#quick-tags .quick-select .hotkey h5,
#quick-tags .quick-select .recent-tags h5 {
  display: inline-block;
  margin-left: 8px;
}
#quick-tags .quick-select .hotkey h6,
#quick-tags .quick-select .recent-tags h6 {
  display: inline-block;
  color: #777;
  width: 3em;
  font-variant: small-caps;
}
#quick-tags .quick-select .hotkey .keys,
#quick-tags .quick-select .hotkey .recent,
#quick-tags .quick-select .recent-tags .keys,
#quick-tags .quick-select .recent-tags .recent {
  white-space: nowrap;
}
#quick-tags .quick-select .hotkey .keys > .key,
#quick-tags .quick-select .hotkey .recent > .key,
#quick-tags .quick-select .recent-tags .keys > .key,
#quick-tags .quick-select .recent-tags .recent > .key {
  display: block;
}
#quick-tags .quick-select .hotkey .keys h6,
#quick-tags .quick-select .hotkey .recent h6,
#quick-tags .quick-select .recent-tags .keys h6,
#quick-tags .quick-select .recent-tags .recent h6 {
  display: inline-block;
  color: #000;
  text-align: center;
}
#quick-tags .quick-select .hotkey .keys div,
#quick-tags .quick-select .hotkey .recent div,
#quick-tags .quick-select .recent-tags .keys div,
#quick-tags .quick-select .recent-tags .recent div {
  display: inline-block;
}
#quick-tags .quick-tag-tree {
  --placeholder: "  search...";
  display: flex;
  flex-flow: column;
  align-items: stretch;
  height: 100%;
  overflow: hidden;
  grid-area: tree;
  border-right: 0;
  padding: 0;
  background-color: var(--component-background-color);
}
#quick-tags .quick-tag-tree > div {
  padding: var(--padding);
}
#quick-tags .quick-tag-tree div.search {
  flex: 0 0 content;
}
#quick-tags .quick-tag-tree div.search input {
  width: 50em;
  display: block;
  margin-bottom: 4px;
}
#quick-tags .quick-tag-tree div.create {
  flex: 0 0 content;
  border-bottom: 1px solid #444;
}
#quick-tags .quick-tag-tree div.create .parent {
  display: inline-block;
  position: relative;
  color: var(--accent-foreground-color);
}
#quick-tags .quick-tag-tree div.create .parent::after {
  content: ":";
}
#quick-tags .quick-tag-tree div.create .name {
  color: var(--component-foreground-color);
  margin-left: 2em;
}
#quick-tags .quick-tag-tree div.tags {
  flex: 1 1 auto;
  overflow: auto;
  margin-top: var(--padding);
}
#quick-tags .small {
  margin: 1em 4px;
}
#quick-tags .small > div {
  display: inline-block;
  width: 90px;
  height: 90px;
  margin-right: 4px;
  border: 1px solid var(--border-color);
}
#quick-tags .small > div img {
  width: 100%;
  height: 100%;
  -o-object-fit: contain;
  object-fit: contain;
  display: block;
  margin: auto auto;
}
#quick-tags .focus {
  display: block;
  border: 1px solid white;
  background-color: white;
  width: 100%;
  aspect-ratio: 1;
  display: flex;
  justify-content: center;
}
#quick-tags .focus img {
  max-width: 100%;
  max-height: 100%;
  display: block;
  margin: auto auto;
}
#quick-tags .images {
  margin: auto auto;
  width: -moz-fit-content;
  width: fit-content;
}
#quick-tags .tag.node {
  position: relative;
}
#quick-tags .tag.node .hotkey {
  font-weight: lighter;
  font-size: var(--small-font-size);
}
#quick-tags .tag.node .hotkey input {
  width: 40px;
  display: inline-block;
  text-align: center;
}
#quick-tags .tag.node .self {
  position: relative;
  --placeholder: " ";
}
#quick-tags .tag.node .self .on-hover {
  display: none;
  position: absolute;
  top: 2px;
  right: var(--padding);
}
#quick-tags .tag.node .self .input {
  width: 2em;
  margin-right: 1em;
  text-align: center;
}
#quick-tags .tag.node .self:hover {
  background-color: #ffa;
  height: 2em;
}
#quick-tags .tag.node .self:hover .on-hover {
  display: inline-block;
}
#quick-tags .tag.node .children.empty {
  display: none;
}
#quick-tags .tag.node > .children {
  margin-left: 1em;
  border-left: 1px dotted var(--accent-foreground-color);
  padding-left: 0px;
  position: relative;
}
#quick-tags .tag.node > .children > .tag.node {
  padding-left: 8px;
}
#quick-tags .tag.node > .children > .tag.node > .self::after {
  content: " ";
  position: absolute;
  top: 50%;
  left: -6px;
  width: 8px;
  height: 1px;
  border-top: 1px dotted var(--accent-foreground-color);
}
#quick-tags .no-items {
  font-style: italic;
  display: block;
  text-align: center;
}
@keyframes cursorBlink {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
#quick-tags input.tag-search {
  vertical-align: top;
  text-align: left;
  border: 1px solid black;
  color: var(--foreground-color);
  background-color: var(--background-color);
  display: inline-block;
  width: 50em;
  position: relative;
  height: 24px;
  overflow: hidden;
  padding-left: 2px;
}
#quick-tags .search .phrase .level {
  position: relative;
  padding-right: 15px;
}
#quick-tags .search .phrase .level .word ~ .word {
  display: inline-block;
  margin-left: 8px;
}
#quick-tags .search .phrase .level::after {
  content: "/";
  position: absolute;
  right: 5px;
  top: 4px;
  font-size: small;
  font-weight: lighter;
}
#quick-tags .search .phrase .level:last-child {
  padding-right: 0;
  padding-top: 2px;
}
#quick-tags .search .phrase .level:last-child::after {
  display: none;
}
#quick-tags .tag.match > .self {
  color: var(--accent-color-foreground);
}
#quick-tags .tag.match.selected > .self .name {
  outline: 1px dashed var(--accent-color-foreground);
}
#quick-tags .tag > .self span.name {
  display: inline-block;
  color: var(--accent-color-foreground);
}
#quick-tags .tag > .self span.name b {
  color: var(--accent-color-foreground);
  text-decoration: underline;
  border-bottom: 1px solid black;
}
#quick-tags .tag > .self span.name .level {
  margin-right: 8px;
}
#quick-tags .tag > .self span.name .new {
  outline: 1px solid var(--accent-foreground-color);
  padding-left: 1em;
}
#quick-tags .tag > .self span.name .new button {
  margin-left: 0.5rem;
}
#quick-tags .tag > .self span.name div {
  display: inline-block;
}

.settings-component {
  padding: 2rem;
  background-color: white;
  color: black;
  width: 100%;
  height: 100%;
}
.settings-component .tree {
  display: block;
  border: 1px solid #dddddd;
  background-color: #f0f0f0;
  padding: 2px;
  max-height: calc(100% - 4rem);
  height: 20rem;
  overflow: auto;
}
.settings-component .tree .tree-item {
  display: grid;
  width: 100%;
  grid-template-areas: "open check name" "children children children";
  grid-template-columns: max-content max-content 1fr;
  grid-template-rows: max-content;
}
.settings-component .tree .tree-item .open-close {
  grid-area: open;
  width: 10px;
  position: relative;
}
.settings-component .tree .tree-item .children {
  grid-area: children;
  margin-left: 2rem;
  border-left: 1px solid #aaa;
  border-bottom: 0px solid red;
}
.settings-component .tree .tree-item input[type=checkbox] {
  grid-area: check;
  width: 16px;
  height: 16px;
  background-color: blue;
  margin-left: 6px;
}
.settings-component .tree .tree-item span.name {
  grid-area: name;
  white-space: nowrap;
}
.settings-component .tree .tree-item > .open-close::after {
  content: "";
  position: absolute;
  left: 4px;
  right: 4px;
  bottom: 4px;
  top: 4px;
  border: 0px solid #aaa;
  border-width: 0 2px 2px 0;
  transform: rotate(-45deg);
  padding: 3px;
}
.settings-component .tree .tree-item.open > .open-close::after {
  content: "";
  position: absolute;
  left: 4px;
  right: 4px;
  bottom: 4px;
  top: 4px;
  border: 0px solid #aaa;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
  padding: 3px;
}
.settings-component .tree .tree-item.closed .children {
  display: none;
}
.settings-component .folders.selected {
  display: block;
  border: 1px solid #dddddd;
  background-color: #f0f0f0;
  padding: 2px;
  height: 5rem;
  overflow: auto;
}
.settings-component .folders.selected ul {
  padding-left: 2rem;
}

#tag-manager {
  width: 800px;
  margin: auto auto;
  border-right: 1px solid #aaa;
  border-left: 1px solid #aaa;
  height: 100%;
  display: flex;
  flex-flow: column;
  align-items: stretch;
  height: 100%;
}

#tag-manager h1 {
  flex: 0 0 auto;
  width: 100%;
  padding: 8px;
  display: block;
  background-color: #aaf;
  text-align: center;
}

#tag-manager .tag-tree {
  flex: 1 1 auto;
  overflow: auto;
  padding-left: 4px;
  padding-top: 4px;
  position: relative;
}

#tag-manager .tag-tree > .tag:last-child {
  margin-bottom: 4rem;
}

#tag-manager .children {
  position: relative;
  padding-left: 4rem;
}

#tag-manager .tag {
  position: relative;
}

#tag-manager .tag .on-hover {
  display: none;
}

#tag-manager .tag .buttons {
  display: none;
  position: absolute;
  top: 4px;
  right: 4px;
  height: 2.5em;
}

#tag-manager .tag button {
  margin-left: 8px;
  border: 0px;
  text-decoration: underline;
  background-color: transparent;
}

#tag-manager .tag .self:hover {
  border: 1px dashed #aaa;
  height: 3em;
}

#tag-manager .tag .self:hover .on-hover {
  display: block;
}

#tag-manager .tag.root .edit {
  display: none !important;
}

#tag-manager .tag .self {
  background-color: transparent;
  transition: background-color 1s;
}

#tag-manager .tag.new .self {
  background-color: yellow;
  transition: background-color 1s;
}

#tag-manager .tag.dragging {
  background-color: aqua;
}

#tag-manager .tag.dragging .button {
  display: none !important;
}

#tag-manager .tag.dragging .children {
  display: none;
}

#tag-manager .tag.drag-over:not(.dragging) > .self {
  background-color: yellow;
  border: 1px dashed #aaa;
}

.manager-tag-tree {
  overflow: auto;
}

/*# sourceMappingURL=MediaTagger.css.map */